@page "/"
@using SentimentAnalysis.Data
@inject SentimentAnalysisService SentimentService

<PageTitle>Sentiment Analysis</PageTitle>

<h1>Sentiment Analysis</h1>

<p>Enter text into the first text box to classify it based on the estimated sentiment</p>

<div id="inputSection"></div>
<textarea id="sentimentInput" rows="4" cols="50" placeholder="Type your text here..."></textarea>
<button class="btn btn-primary" @onclick="ClassifyTextSentiment">Classify Text</button>

<div id="sentimentOutputSection"></div>
@if (sentiments == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Text</th>
                <th>Sentiment</th>
                <th>Score</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var sentiment in sentiments)
            {
                <tr>
                    <td>@sentiment.Text</td>
                    <td>@sentiment.Sentiment</td>
                    <td>@sentiment.Score</td>
                </tr>
            }
        </tbody>
    </table>
}
<button class="btn btn-primary" @onclick="DeleteSentiment">Delete Sentiment</button>


@code {
    private SentimentSet[]? sentiments;

    private void ClassifyTextSentiment()
    {

    }

    private void DeleteSentiment()
    {
        
    }

    //protected override async Task OnInitializedAsync()
    //{
    //    forecasts = await ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));
    //}
}
